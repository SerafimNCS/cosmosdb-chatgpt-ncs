@page "/"
@using System.Timers

<PageTitle>NCS NEXT CHATGPT v0.2</PageTitle>
<main class="h-100 d-flex flex-row justify-content-start">
    @if (!IsNavMenuCollapsed)
    {
        <NavMenu @ref="@NavMenu" OnChatClicked="LoadChatEventHandlerAsync" OnNavBarVisibilityUpdated="UpdateNavBarVisibility" />
    }
    <section class="flex-grow-1">
        <ChatPane @ref="@ChatPane" CurrentSession="@CurrentSession" OnChatUpdated="ForceRefreshAsync" OnNavBarVisibilityUpdated="UpdateNavBarVisibility" ShowHeader="@IsNavMenuCollapsed" />
    </section>
</main>

@code {

    [Inject]
    public IJSRuntime JSRuntime { get; set; }

    [Parameter]
    public EventCallback<string> OnChatUpdated { get; set; } = default!;

    private Session? CurrentSession;
    private ChatPane? ChatPane = default;
    private NavMenu? NavMenu = default;
    private bool IsNavMenuCollapsed { get; set; }

    private bool isPasscodeVerified = false;
    private const string PASSCODE = "NEXTCHATGPT";


    private void UpdateNavBarVisibility()
    {
        IsNavMenuCollapsed = !IsNavMenuCollapsed;
    }

    protected override void OnInitialized()
    {
        NavMenu = new NavMenu();
        ChatPane = new ChatPane();
    }

    public async void LoadChatEventHandlerAsync(Session session)
    {
        if (isPasscodeVerified)
        {
            CurrentSession = session;

            if (ChatPane is not null)
            {
                ChatPane.ChangeCurrentChatSession(session);
            }

            // Inform blazor the UI needs updating
            await InvokeAsync(StateHasChanged);
        }
        else
        {
            string input = await JSRuntime.InvokeAsync<string>("prompt", "Please enter the passcode to access the chat:", "");

            if (input == PASSCODE)
            {
                isPasscodeVerified = true;
                LoadChatEventHandlerAsync(session);
            }
            else
            {
                await JSRuntime.InvokeAsync<object>("alert", "Invalid passcode. Please try again.");
                LoadChatEventHandlerAsync(session);
            }
        }
    }


    public async void ForceRefreshAsync()
    {
        // Inform blazor the UI needs updating
        await InvokeAsync(StateHasChanged);

        NavMenu?.UpdateNavMenuDisplay("Rename by Open AI");
    }
}
